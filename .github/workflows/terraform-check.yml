name: Terraform Check

on:
  pull_request:
    branches:
      - main
    paths:
      - 'base/config.yml'
      - 'base/terraform/**'
      - 'apps/**'
      - 'tenants/**'

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    
    # Set Auth0 provider environment variables at job level
    env:
      AUTH0_DOMAIN: ${{ secrets.DEV_AUTH0_DOMAIN }}
      AUTH0_CLIENT_ID: ${{ secrets.DEV_AUTH0_CLIENT_ID }}
      AUTH0_CLIENT_SECRET: ${{ secrets.DEV_AUTH0_CLIENT_SECRET }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0
          terraform_wrapper: false
      
      - name: Terraform Format
        working-directory: ./base/terraform
        run: terraform fmt
        continue-on-error: true
      
      - name: Terraform Init
        working-directory: ./base/terraform
        run: terraform init
      
      - name: Terraform Validate
        working-directory: ./base/terraform
        run: terraform validate
      
      - name: Terraform Plan
        working-directory: ./base/terraform
        run: |
          terraform plan -no-color > plan_output.txt 2>&1
          EXIT_CODE=$?
          cat plan_output.txt
          exit $EXIT_CODE
        continue-on-error: true
        id: plan
      
      - name: Comment PR with Plan
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const planOutput = fs.readFileSync('./base/terraform/plan_output.txt', 'utf8');
            
            const output = `#### Terraform Plan ðŸ“–
            
            <details><summary>Show Plan</summary>
            
            \`\`\`terraform
            ${planOutput}
            \`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });