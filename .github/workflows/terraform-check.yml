name: Terraform Check

on:
  pull_request:
    branches:
      - main
    paths:
      - 'base/config.yml'
      - 'base/terraform/**'

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0
      
      - name: Terraform Init
        working-directory: ./base/terraform
        run: terraform init
      
      - name: Terraform Format Check
        working-directory: ./base/terraform
        run: terraform fmt -check
        continue-on-error: true
      
      - name: Terraform Validate
        working-directory: ./base/terraform
        run: terraform validate
      
      - name: Terraform Plan
        working-directory: ./base/terraform
        env:
          TF_VAR_auth0_domain: ${{ secrets.DEV_AUTH0_DOMAIN }}
          TF_VAR_auth0_client_id: ${{ secrets.DEV_AUTH0_CLIENT_ID }}
          TF_VAR_auth0_client_secret: ${{ secrets.DEV_AUTH0_CLIENT_SECRET }}
        run: terraform plan -no-color
        continue-on-error: true
        id: plan
      
      - name: Comment PR with Plan
        uses: actions/github-script@v7
        env:
          PLAN: "${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Plan ðŸ“–
            
            <details><summary>Show Plan</summary>
            
            \`\`\`terraform
            ${process.env.PLAN}
            \`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })