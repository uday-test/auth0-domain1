name: Terraform Deploy

on:
  push:
    branches:
      - main
    paths:
      - 'base/config.yml'
      - 'base/terraform/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options:
          - dev
          - qa
          - prod

jobs:
  deploy:
    name: Deploy to Auth0
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0
      
      - name: Determine environment
        id: env
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "environment=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT
          else
            echo "environment=dev" >> $GITHUB_OUTPUT
          fi
      
      - name: Get secrets for environment
        id: secrets
        run: |
          case "${{ steps.env.outputs.environment }}" in
            dev)
              echo "domain=${{ secrets.DEV_AUTH0_DOMAIN }}" >> $GITHUB_OUTPUT
              echo "client_id=${{ secrets.DEV_AUTH0_CLIENT_ID }}" >> $GITHUB_OUTPUT
              echo "client_secret=${{ secrets.DEV_AUTH0_CLIENT_SECRET }}" >> $GITHUB_OUTPUT
              ;;
            qa)
              echo "domain=${{ secrets.QA_AUTH0_DOMAIN }}" >> $GITHUB_OUTPUT
              echo "client_id=${{ secrets.QA_AUTH0_CLIENT_ID }}" >> $GITHUB_OUTPUT
              echo "client_secret=${{ secrets.QA_AUTH0_CLIENT_SECRET }}" >> $GITHUB_OUTPUT
              ;;
            prod)
              echo "domain=${{ secrets.PROD_AUTH0_DOMAIN }}" >> $GITHUB_OUTPUT
              echo "client_id=${{ secrets.PROD_AUTH0_CLIENT_ID }}" >> $GITHUB_OUTPUT
              echo "client_secret=${{ secrets.PROD_AUTH0_CLIENT_SECRET }}" >> $GITHUB_OUTPUT
              ;;
          esac
      
      - name: Terraform Init
        working-directory: ./base/terraform
        run: terraform init
      
      - name: Terraform Apply
        working-directory: ./base/terraform
        env:
          TF_VAR_auth0_domain: ${{ steps.secrets.outputs.domain }}
          TF_VAR_auth0_client_id: ${{ steps.secrets.outputs.client_id }}
          TF_VAR_auth0_client_secret: ${{ steps.secrets.outputs.client_secret }}
        run: terraform apply -auto-approve
      
      - name: Output Results
        working-directory: ./base/terraform
        env:
          TF_VAR_auth0_domain: ${{ steps.secrets.outputs.domain }}
          TF_VAR_auth0_client_id: ${{ steps.secrets.outputs.client_id }}
          TF_VAR_auth0_client_secret: ${{ steps.secrets.outputs.client_secret }}
        run: |
          echo "Environment: ${{ steps.env.outputs.environment }}"
          echo "Client ID: $(terraform output -raw client_id)"
          echo "Client Name: $(terraform output -raw client_name)"